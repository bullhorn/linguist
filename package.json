{
  "name": "@bullhorn/linguist",
  "author": "Brian Kimball <bvkimball@gmail.com>",
  "version": "0.1.0",
  "description": "A universal localization managment tool for web projects",
  "publishConfig": {
    "registry": "https://registry.npmjs.org"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bvkimball/linguist"
  },
  "keywords": [
    "i18n",
    "l10n",
    "Localization"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/bvkimball/linguist/issues"
  },
  "homepage": "https://github.com/bvkimball/linguist#readme",
  "bin": {
    "linguist": "build/main/cli.js"
  },
  "main": "build/main/index.js",
  "typings": "build/main/index.d.ts",
  "module": "build/module/index.js",
  "files": [
    "dist"
  ],
  "engines": {
    "node": ">= 4.2.1",
    "npm": ">= 3"
  },
  "dependencies": {
    "chalk": "^1.1.1",
    "cheerio": "^0.22.0",
    "clear": "0.0.1",
    "commander": "^2.9.0",
    "flat": "^2.0.1",
    "fs-readline": "^2.1.0",
    "gettext-parser": "^1.2.2",
    "handlebars": "^4.0.5",
    "lodash": "4.3.0",
    "log-update": "^1.0.2",
    "marked": "^0.3.6",
    "mkdirp": "^0.5.1",
    "node-fetch": "^1.6.3",
    "rc": "^1.1.6",
    "rimraf": "^2.5.4",
    "sinon": "^1.17.7",
    "tslib": "^1.5.0",
    "xml2js": "^0.4.17"
  },
  "devDependencies": {
    "@types/chalk": "^0.4.31",
    "@types/cheerio": "^0.17.31",
    "@types/commander": "^2.3.31",
    "@types/handlebars": "^4.0.31",
    "@types/marked": "0.0.28",
    "@types/node": "^7.0.5",
    "@types/xml2js": "0.0.32",
    "ava": "^0.18.1",
    "codecov": "^1.0.1",
    "codelyzer": "^2.0.0-beta.4",
    "multiview": "^2.3.1",
    "npm-scripts-info": "^0.3.6",
    "nyc": "^10.0.0",
    "opn-cli": "^3.1.0",
    "pascal-case": "^2.0.0",
    "rimraf": "^2.5.3",
    "standard-version": "^4.0.0",
    "trash-cli": "^1.4.0",
    "tslint": "^4.0.2",
    "tslint-config-standard": "^4.0.0",
    "typedoc": "^0.5.5",
    "typescript": "^2.2.0"
  },
  "scripts": {
    "info": "npm-scripts-info",
    "build": "trash build && tsc -p tsconfig.json && tsc -p config/tsconfig-module.json",
    "lint": "tslint src/**/*.ts",
    "unit": "yarn build && nyc ava",
    "check-coverage": "nyc check-coverage --lines 50 --functions 50 --branches 50",
    "test": "yarn lint && yarn unit && yarn check-coverage",
    "watch": "trash build && multiview [yarn watch:build] [yarn watch:unit]",
    "watch:build": "tsc -p tsconfig.json -w",
    "watch:unit": "tsc -p tsconfig.json && ava --watch --verbose",
    "cov": "yarn unit && yarn html-coverage && opn coverage/index.html",
    "html-coverage": "nyc report --reporter=html",
    "send-coverage": "nyc report --reporter=lcov > coverage.lcov && codecov",
    "docs": "typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs && opn build/docs/index.html",
    "docs:json": "typedoc --mode file --json build/docs/typedoc.json src/index.ts",
    "release": "standard-version"
  },
  "scripts-info": {
    "info": "Display information about the scripts",
    "build": "(Trash and re)build the library",
    "lint": "Lint all typescript source files",
    "unit": "Run unit tests",
    "test": "Lint and test the library",
    "watch": "Watch source files, rebuild library on changes, rerun relevant tests",
    "watch:build": "Watch source files, rebuild library on changes",
    "watch:unit": "Watch the build, rerun relevant tests on changes",
    "cov": "Run tests, generate the HTML coverage report, and open it in a browser",
    "html-coverage": "Output HTML test coverage report",
    "send-coverage": "Output lcov test coverage report and send it to codecov",
    "docs": "Generate API documentation and open it in a browser",
    "docs:json": "Generate API documentation in typedoc JSON format",
    "release": "Bump package.json version, update CHANGELOG.md, tag a release"
  },
  "nyc": {
    "exclude": [
      "**/*.spec.js"
    ]
  },
  "ava": {
    "files": [
      "build/main/**/*.spec.js"
    ],
    "source": [
      "build/main/**/*"
    ]
  }
}
